? map()
? map
v = (1, 2, 3, 4, 5)
v <- c(1, 2, 3, 4, 5)
map(v, ~. ^ 2)
print(identity(5))
print(totez(c(1, 2, 3)))
# Ukol 1
totez <- function(x)
x
print(totez(5))
print(totez(c(1, 2, 3)))
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
s <- list(c(1), c(1, 2), c(1, 2, 3), c(1, 2, 3, 4), c(1, 2, 3, 4, 5))
v <- for (si in s) {
mean(si)
}
print(v)
for (si in s) {
mean(si)
for (si in s) {
mean(si)
}
4
print(4)
for (si in s) {
mean(si)
}
# Ukol 1
totez <- function(x)
x
print(totez(5))
print(totez(c(1, 2, 3)))
# Ukol 2
root <- function(x, n=2) {
x^(1/n)
}
print(root(16))
# Ukol 3
s <- list(c(1), c(1, 2), c(1, 2, 3), c(1, 2, 3, 4), c(1, 2, 3, 4, 5))
v <- for (si in s) {
mean(si)
}
print(v)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
# Ukol 1
totez <- function(x)
x
print(totez(5))
print(totez(c(1, 2, 3)))
# Ukol 2
root <- function(x, n=2) {
x^(1/n)
}
print(root(16))
# Ukol 3
s <- list(c(1), c(1, 2), c(1, 2, 3), c(1, 2, 3, 4), c(1, 2, 3, 4, 5))
v <- for (si in s) {
mean(s[si])
}
print(v)
x <-5
}
# Ukol 1
totez <- function(x)
x
print(totez(5))
print(totez(c(1, 2, 3)))
# Ukol 2
root <- function(x, n=2) {
x^(1/n)
}
print(root(16))
# Ukol 3
s <- list(c(1), c(1, 2), c(1, 2, 3), c(1, 2, 3, 4), c(1, 2, 3, 4, 5))
v <- for (si in s) {
mean(s[si])
}
print(v)
library(purrr)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
? mean_dbl
print(Sign(-10))
print(Sign(1))
print(Sign(0))
map(seq_len(5), function(x), 1:x)
map(5, runif(10))
map(5, runif(10), x)
runif(10)
map(1:10)
map(1:10, function(x))
map(1:10, function(x), runif(x))
? map
map(runif, 10)
map(runif, n=10)
? seq
? map
map(function(x), runif(10, x))
map(1:5, ~runif(10))
# Ukol 5
map(1:5, runif(x), 10)
# Ukol 5
map(1:5, runif(10), x)
# Ukol 5
map(1:5, function(x), runif(10))
# Ukol 5
map(1:5, function(x), runif(10))
# Ukol 5
map(1:5, ~runif(10))
print(vekt(5))
vekt <- function(x) {
if (x > 0) & is.real(x)
1:x
else
NA
}
print(vekt(5))
vekt <- function(x) {
if (x > 0) & is.real(x)
1:x
else
NA
}
vekt <- function(x) {
if (x > 0 & is.real(x))
1:x
else
NA
}
print(vekt(5))
# Hratky s funkcemi
vekt <- function(x) {
if (x > 0 & is_double(x))
1:x
else
NA
}
print(vekt(5))
? is_integer
? is.integer
vekt <- function(n) {
if (is.numeric(n) && length(n) == 1 && round(n) == n && n > 0)
1:x
else
NA
}
print(vekt(5))
print(vekt(0))
unique(5)
nmax <- function(x, n=1) {
x <- unique(x)
if (is.numeric(x) && is.numeric(n) && length(n) == 1 round(n) == n && n > 0)
max(x[1:n])
else if (is.integer(x))
max(x)
}
print(nmax(c(1, 2, 3, 4, 4, 5, 5), 2))
nmax <- function(x, n=1) {
x <- unique(x)
if (is.numeric(x) && is.numeric(n) && length(n) == 1 round(n) == n && n > 0)
max(x[1:n])
else if (is.integer(x))
max(x)
}
print(nmax(c(1, 2, 3, 4, 4, 5, 5), 2))
nmax <- function(x, n=1) {
x <- unique(x)
if (is.numeric(x) && is.numeric(n) && length(n) == 1 round(n) == n && n > 0)
max(x[1:n])
else if (is.integer(x))
max(x)
}
print(nmax(c(1, 2, 3, 4, 4, 5, 5), 2))
nmax <- function(x, n=1) {
nmax <- function(x, n=1) {
x <- unique(x)
if (is.numeric(x) && is.numeric(n) && length(n) == 1 && round(n) == n && n > 0)
max(x[1:n])
else if (is.integer(x))
max(x)
}
print(nmax(c(1, 2, 3, 4, 4, 5, 5), 2)
print(x)
nmax <- function(x, n=1) {
x <- unique(x)
if (is.numeric(x) && is.numeric(n) && length(n) == 1 && round(n) == n && n > 0)
max(x[1:n])
else if (is.integer(x))
max(x)
}
print(nmax(c(1, 2, 3, 4, 4, 5, 5), 2))
print(nmax(1:5, 2))
x <- 1:5
x[1:2]
nmax <- function(x, n = 1) {
stopifnot(is.numeric(x),
is.numeric(n),
length(n) == 1,
round(n) == n,
n > 0)
sort(unique(x), decreasing = TRUE)[n]
}
print(nmax(1:5, 2))
# Ukol 2
nmax <- function(x, n = 1) {
stopifnot(is.numeric(x),
is.numeric(n),
length(n) == 1,
round(n) == n,
n > 0)
sort(unique(x), decreasing = TRUE)[n]
}
print(nmax(1:5, 2))
print(nmax(1:10))
print(nmax(1:5, 2))
print(nmax(1:10))
print(nmax(1:10, c(1, 2)))
library(ggplot2)
data("mpg", package == "ggplot2")
data("mpg", package == "ggplot2")
library(ggplot2)
data("mpg", package == "ggplot2")
? data
install.packages("ggplo2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data("mpg", package == "ggplot2")
install.packages("ggplot2")
library(ggplot2)
data("mpg", package == "ggplot2")
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
source("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/04_c/04_c.R", echo=TRUE)
