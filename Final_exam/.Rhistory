theme_bw() +
theme(strip.text.y = element_text(angle=0))
? LaplacesDemon
T <- length(r)
r <- as.vector(amzn$r)
T <- length(r)
mon.names <- c("LP", "r_new", "sigma2.new")
parm.names <- c("alpha",
"phi",
"logit.theta[1]",
"logit.theta[2]",
"logit.theta[3]")
PGF <- function(Data) return(c(rnormv(2, 0, 1000)),
log(rhalfcauchy(1, 25)), runif(2))
MyData <- list(PGF=PGF, T=T, mon.names=mon.names, parm.names=parm.names, y=r)
model <- function(parm, Data) {
# Parameters
alpha <- parm[1]; phi <- parm[2]
theta <- invlogit(interval(parm[grep("logit.theta", Data$parm.names)], -10, 10))
parm[grep("logit.theta", Data$parm.names)] <- logit(theta)
# Log(Prior Densities)
alpha.prior <- dnormv(alpha, 0, 1000, log=TRUE)
phi.prior <- dnormv(phi, 0, 1000, log=TRUE)
theta.prior <- sum(dnormv(theta, 0, 1000, log=TRUE))
# Log-Likelihood
mu <- c(alpha, alpha + phi*Data$y[-Data$T])
epsilon <- Data$y - mu
sigma2 <- c(theta[1], theta[1] + theta[2]*epsilon[-Data$T]^2)
sigma2[-1] <- sigma2[-1] + theta[3]*sigma2[-Data$T]
sigma2.new <- theta[1] + theta[2]*epsilon[Data$T]^2 +
theta[3]*sigma2[Data$T]
ynew <- rnormv(1, alpha + phi*Data$y[Data$T], sigma2.new)
LL <- sum(dnormv(Data$y, mu, sigma2, log=TRUE))
### Log-Posterior
LP <- LL + alpha.prior + phi.prior + theta.prior
Modelout <- list(LP=LP, Dev=-2*LL, Monitor=c(LP, ynew, sigma2.new),
yhat=rnormv(length(mu), mu, sigma2), parm=parm)
return(Modelout)
}
initial.values <- c(rep(0, 2), rep(0.4 ,3))
LaplacesDemon(Model=model, Data = MyData, Initial.Values = initial.values)
r <- as.vector(amzn$r)
prior.conditions <- function(psi) {
# (psi[1] > 0) & (psi[2] >= 0) & (psi[3] >= 0) &
(psi[2] + psi[3] < 1)
}
s_0 <- 25000 # Burn-in
s_1 <- 25000
s <- s_0 + s_1
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5,
# addPriorConditions = prior.conditions
))
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5
# addPriorConditions = prior.conditions
))
plot(MCMC)
r <- as.vector(amzn$r)
prior.conditions <- function(psi) {
# (psi[1] > 0) & (psi[2] >= 0) & (psi[3] >= 0) &
(psi[2] + psi[3] < 1)
}
s_0 <- 12500 # Burn-in
s_1 <- 12500
s <- s_0 + s_1
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5, # addPriorConditions = prior.conditions
))
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
r <- as.vector(amzn$r)
prior.conditions <- function(psi) {
(psi[1] > 0) & (psi[2] >= 0) & (psi[3] >= 0) &
(psi[2] + psi[3] < 1)
}
s_0 <- 12500 # Burn-in
s_1 <- 12500
s <- s_0 + s_1
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
# Clear workspace
rm(list=ls())
#install.packages("bayesGARCH")
#install.packages("tidyquant")
#install.packages("LaplacesDemon")
# Load packages
library(tidyverse)
library(ggthemes)
library(bayesGARCH)
library(tidyquant)
library(LaplacesDemon)
library(coda)
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
# Clear workspace
rm(list=ls())
#install.packages("bayesGARCH")
#install.packages("tidyquant")
#install.packages("LaplacesDemon")
# Load packages
library(tidyverse)
library(ggthemes)
library(bayesGARCH)
library(tidyquant)
library(LaplacesDemon)
library(coda)
getSymbols("AMZN", from='2010-01-01', to='2021-12-11')
dates <- rownames(as.data.frame(AMZN))
amzn <- as_tibble(AMZN$AMZN.Adjusted)
head(amzn)
colnames(amzn) <- "a_close"
amzn$date <- dates
amzn <- amzn %>%
mutate(r = c(NA, (a_close[-1] - a_close[-length(a_close)]) / a_close[-length(a_close)])) %>%
na.omit()
head(amzn)
plot(amzn$r, type="l", ylab = "Daily returns")+
grid()
amzn %>%
ggplot(aes(x=r)) +
geom_histogram(aes(y=..density..)) +
geom_density() +
scale_x_continuous(breaks = seq(-0.2, 0.2, 0.05)) +
theme_economist_white()
qqnorm(amzn$r, pch=1, frame=TRUE)
qqline(amzn$r, col="blue", lwd=3)
amzn %>%
pivot_longer(-date) %>%
ggplot(aes(
x = as.Date(date),
y = value,
group = name
)) +
geom_line() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x= "Date", y="") +
facet_grid("name", scales = "free", labeller = as_labeller(c("a_close"="Adj. Close",
"r"="Daily Return"))) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
r <- as.vector(amzn$r)
prior.conditions <- function(psi) {
(psi[1] > 0) & (psi[2] >= 0) & (psi[3] >= 0) &
(psi[2] + psi[3] < 1)
}
s_0 <- 12500 # Burn-in
s_1 <- 12500
s <- s_0 + s_1
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
plot(MCMC)
n.burn <- burnin(MCMC$chain1, "BMK")
n.burn
print(coda::gelman.diag(MCMC, autoburnin = 8000))
1 - coda::rejectionRate(MCMC)
coda::autocorr.diag(MCMC)
smpl <- formSmpl(MCMC, l.bi = 5000,
batch.size = 2)
summary(smpl)
coda::autocorr.diag(smpl)
persistence <- unclass(smpl[, 2] + smpl[, 3])
hist(persistence)
median(persistence)
print(coda::gelman.diag(MCMC, autoburnin = 12500))
1 - coda::rejectionRate(MCMC)
coda::autocorr.diag(MCMC)
smpl <- formSmpl(MCMC, l.bi = 5000,
batch.size = 2)
smpl <- formSmpl(MCMC, l.bi = 12500,
batch.size = 2)
summary(smpl)
persistence <- unclass(smpl[, 2] + smpl[, 3])
hist(persistence)
median(persistence)
ESS(MCMc)
ESS(MCMC)
l1 = c(2, 0, 0, 0, -1 , -1)
l2 = c(0, 2, 0, -1, 1)
l3 = c(0, 0, 2, 3, -1)
l1 = c(2, 0, 0, -1, -1)
rbind(l1, l2, l3)
mat <- rbind(l1, l2, l3)
solve(mat)
matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=3, ncol=6, byrow=TRUE)
matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=5, ncol=6, byrow=TRUE)
mat <- matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=5, ncol=6, byrow=TRUE)
pracma::rref(mat)
setwd("C:/Users/kutis/OneDrive/School/1. Semester/Analýza a vizualizace ekonomickych dat v R/R_Course/Final_exam")
# clear workspace
rm(list = ls())
# Libs and data
library(tidyverse)
library(stargazer)
library(lfe)
load("ZK_lits2.RData")
load("star.RData")
################################## Ukol c. 1 ####################################
# Check data
lits
# Solution
u_1 <- lits %>%
mutate(age_cohort = cut(
respondentage,
breaks = c(0, 20, 30, 40, 50, 1e20),
labels = c(1, 2, 3, 4, 5),
include.lowest = TRUE,
right = TRUE
)) %>%
group_by(age_cohort) %>%
summarise(
moving_proportion = sum(migration_domestic == "Yes" |
migration_international == "Yes") /
length(migration_domestic)
) %>% na.omit()
str_glue("\n\n--------- Exercise 1 - Solution ---------\n\n")
u_1
################################## Ukol c. 2 ####################################
# 2.1 - Load
chmi_1 <- read_delim(
"ZK_chmi.tsv",
delim = "\t",
escape_double = FALSE,
locale = locale(decimal_mark = ","),
trim_ws = TRUE
)
# Check data
str_glue("\n\n--------- Exercise 2.1 (Data Load) - Solution ---------\n\n")
chmi_1
# 2.2
chmi_2 <- chmi_1 %>% select(-c("X", "Max.", "N"))
str_glue("\n\n--------- Exercise 2.2 (Remove columns) - Solution ---------\n\n")
chmi_2
# 2.3
chmi_3 <- chmi_2 %>%
mutate(Month = `Den/Měsíc`) %>%
select(-`Den/Měsíc`) %>%
pivot_longer(
-Month,
names_to = "Day",
values_to = "PM10",
names_transform = list(Day = as.integer),
values_transform = list(PM10 = as.double)
) %>%
arrange(Day, Month)
str_glue("\n\n--------- Exercise 2.3 (Change the structure) - Solution ---------\n\n")
chmi_3
################################## Ukol c. 3 ####################################
# check data
head(star)
model_1 <- totalscore ~ small + boy + white_asian + tchexper
model_2 <- totalscore ~ small + boy + white_asian + tchexper | schid
models <- list("OLS" = lm(model_1, data = star),
"Fixed effects - schid"=felm(model_2, data = star))
# Solution
str_glue("\n\n--------- Exercise 3 - Solution ---------\n\n")
stargazer(models,
type = "text",
column.labels = c("Model 1", "Model 2"),
column.separate = c(1, 2),
model.names = FALSE,
model.numbers = FALSE)
################################## Ukol c. 4 ####################################
# using multiple version - non shows much of a relationship
# V. 1 - The best one probably
v1 <- star %>%
ggplot(aes(x=tchexper, y=totalscore, color=as.character(boy))) +
geom_jitter(alpha=0.4) +
scale_color_manual(name="Gender",
breaks=c(0, 1),
labels=c("Girl", "Boy"),
values = c("red", "blue")) +
facet_grid(white_asian ~ small, labeller = labeller(
white_asian = c(`0` = "White/Asian = No", `1`="White/Asian = Yes"),
small = c(`0` = "Small class = No", `1`="Small class = Yes")
)) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
v1
# V. 2
v2 <- star %>%
ggplot(aes(x=tchexper, y=totalscore, color=as.character(small))) +
geom_jitter(alpha=0.4) +
scale_color_manual(name="Class size",
breaks=c(0, 1),
labels=c("Not small", "Small"),
values = c("red", "blue")) +
facet_grid(white_asian ~ boy, labeller = labeller(
white_asian = c(`0` = "White/Asian = No", `1`="White/Asian = Yes"),
boy = c(`0` = "Girl", `1`="Boy")
)) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
v2
# V. 3
v3 <- star %>%
ggplot(aes(x=tchexper, y=totalscore)) +
geom_point(alpha=0.4) +
facet_grid(white_asian ~ boy + small, labeller = labeller(
white_asian = c(`0` = "White/Asian = No", `1`="White/Asian = Yes"),
boy = c(`0` = "Girl", `1`="Boy"),
small = c(`0` = "Small class = No", `1` = "Small class = Yes")
)) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
v3
v1 <- star %>%
ggplot(aes(x=tchexper, y=totalscore, color=as.character(boy))) +
geom_point(alpha=0.1) +
geom_smooth(method = "lm") +
scale_color_manual(name="Gender",
breaks=c(0, 1),
labels=c("Girl", "Boy"),
values = c("red", "blue")) +
facet_grid(white_asian ~ small, labeller = labeller(
white_asian = c(`0` = "White/Asian = No", `1`="White/Asian = Yes"),
small = c(`0` = "Small class = No", `1`="Small class = Yes")
)) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
v1
star %>% ggplot(aes(x = tchexper, y = totalscore, color = as.character(boy))) +
geom_point() +
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
theme_bw() +
labs(title = "Závislost mezi celkovým skóre žáka a zkušeností učitele") +
scale_linetype_manual(
name = "Pohlavie",
values = c("chlapec" = 1, "dievča" = 0),
breaks = c("chlapec", "dievča"),
labels = c("Dievča", "Chlapec")
)
theme_bw()
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
labs(title = "Závislost mezi celkovým skóre žáka a zkušeností učitele") +
scale_linetype_manual(
name = "Pohlavie",
values = c("chlapec" = 1, "dievča" = 0),
breaks = c("chlapec", "dievča"),
labels = c("Dievča", "Chlapec")
) +
theme_bw()
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
scale_linetype_manual(
name = "Pohlavie",
values = c("chlapec" = 1, "dievča" = 0),
breaks = c("chlapec", "dievča"),
labels = c("Dievča", "Chlapec")
) +
labs(title = "Závislost mezi celkovým skóre žáka a zkušeností učitele") +
theme_bw()
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
scale_linetype_manual(
name = "Pohlavie",
breaks = c("chlapec", "dievča"),
labels = c("Dievča", "Chlapec")
) +
labs(title = "Závislost mezi celkovým skóre žáka a zkušeností učitele") +
theme_bw()
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
theme_bw()
rlang::last_error()
star %>% ggplot(aes(x = tchexper, y = totalscore, color = as.character(boy))) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
theme_bw()
star %>% ggplot(aes(x = tchexper, y = totalscore, color = as.character(boy))) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
scale_color_discrete(name="Pohlavie", labels=c("Dievča", "Chlapec"))
star %>% ggplot(aes(x = tchexper, y = totalscore, color = as.character(boy))) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(white_asian ~ small,
labeller = labeller(white_asian = as_labeller(
c("1" = "White/Asian", "0" = "Nie je White/Asian")
),
small = as_labeller(
c("1" = "Trieda je malá", "0" = "Trieda je veľká")
))) +
scale_x_continuous("Celkové skóre") +
scale_y_continuous("Skúsenosti učiteľa") +
scale_color_discrete(name="Pohlavie", breaks=c(0, 1), labels=c("Dievča", "Chlapec"))
v1 <- star %>%
ggplot(aes(x=tchexper, y=totalscore, color=as.character(boy))) +
geom_point(alpha=0.1) +
geom_smooth(method = "lm") +
scale_color_manual(name="Gender",
breaks=c(0, 1),
labels=c("Girl", "Boy"),
values = c("red", "blue")) +
facet_grid(white_asian ~ small, labeller = labeller(
white_asian = c(`0` = "White/Asian = No", `1`="White/Asian = Yes"),
small = c(`0` = "Small class = No", `1`="Small class = Yes")
)) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
v1
